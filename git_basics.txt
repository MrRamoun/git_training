1)> Basic Termonlogy
====================
- commits: snapshots of --> structure of CWD & contents of files in a specific moment in time.
- repository: a timeline of commits and branches (A repository contains all project files, including the revision history).
- branches: new development paths that we can follow as long as we like without missing up original project.
- master branch: the main branch of the project.
- pull requests: a report of all changes made in a branch.
- cloning: downloading the repo from github to work-on (same repo == same id).
- pushing: uploading the repo to github.
- forking: copying the repository from one account on github to another (entirely new repo == not the same repo == different ids).

2)> Important Notes:
====================
= Git is distributed (locally enabled), version contorl can happen on local computers  by cloning repositories & if a server-comonenet is needed for collabrtion --> github can be used.

= 

*Note: in order for pull requests on the same repo to work --> the admin must be cloning the repo (up to date) && the co-developer must push changes to remote repo (up to date)

3)> Basic Git Commands
======================

- git local configurations:
---------------------------
-> The username and email: they are not credentials for any git/github sites -> they are local records to give credit for work done using git 

$ git config --global user.name "<username>"
$ git config --gloabl user.email "<user@example.com>"

- cloning a repository:
-----------------------
$ git clone <repo url.git>

- initializing a repository:
----------------------------
$ git init [if <repo name> was added it's gonna create a repo from ..][if not --> it   is gonna create a repo from current dir]

- adding a remote repository:
-----------------------------
$ git remote add <repo name - local> <repo url>

- pulling latest from a remote repository:
------------------------------------------
$ git pull <repo name>

- adding files to stage:
------------------------
$ git add filename.ext

- commiting changes to repository (taking a snapshot):
------------------------------------------------------
snapshots are for selected files in the stage step "only".

$ git commit -m "commit message"

- pushing to remote repository:
-------------------------------
*Note: a remote connection must be established first using ssh or https

$ git push 

- switching branches:
---------------------
$ git checkout -b <branch-name>
$ git checkout master 

*** 
 1 ) Examples:
***
ramoun: $ git checkout master 
ramoun: $ git commit -a -m "my new logo"
ramoun: $ git push 

tito: $ git checkout -b titoslogin
tito: $ git commit -a -m "adding a login page"
tito: $ git push origin titoslogin 

#merging ramoun's and tito's work
ramoun: $ git pull 
ramoun: $ git merge titoslogin

#Documentation
$ git add -p my report.markdown
$ git commit -m "Added latest stats"

$ git log --graph --decorate --abrev-
commit --all --pretty=oneline

# -----
# These notes represent the understanding of the topic by (R}AM#UN>)
# These notes are FULLY:
#   -> Written By (R}AM#UN>)
#   -> Coded By (R}AM#UN>)
#   -> Produced By (R}AM#UN>)
#   -> Created By (R}AM#UN>)
# -----